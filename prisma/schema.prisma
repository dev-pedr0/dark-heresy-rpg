// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?  @unique
  emailVerified  DateTime?
  image          String?
  role           String   @default("user")
  hashedPassword String? // adicionado aqui ðŸ‘ˆ

  accounts       Account[]
  sessions       Session[]
  characters     Character[]
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user              User     @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime

  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Character {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  userId          String     @db.ObjectId
  user            User       @relation(fields: [userId], references: [id])
  origemNome      String
  atributosPersonagem Json?
  backgroundNome   String?
  funcaoNome      String?
  aptidoes        String[]   @default([])
  avancoElite     String?
  nomePersonagem  String
  nomeJogador     String
  idade           Int?
  aparencia       String
  historia        String
  genero          String
  divinacao       Json?
  aliados         String[]   @default([])
  inimigos        String[]   @default([])
  xpDisponivel    Int?
  xpGasto         Int?
  destinoTotal    Int?
  destinoAtual    Int?
  pericias        Json[]     @default([])
  atributos       Json
  insanidade      Int        @default(0)
  traumas         String     @default("")
  corrupcao       Int        @default(0)
  malignancias    String     @default("")
  mutacoes        String[]   @default([])
  talentos        Json[]     @default([])
  tracos          Json[]     @default([])
  equipamentos    String[]   @default([])
  armas           Json[]     @default([])
  armaduras       Json[]     @default([])
  defesaPorLocal  Json
  vidatotal       Int?
  vidaAtual       Int?
  danoCritico     Int?
  condicoes       String?
  movimento        Json?
  fadigaLimite    Int?
  fadigaAtual     Int?
  psiNivel        Int?
  poderesPsiquicos String?
  outrasHabilidades String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}